package com.example.raspi_temphum.CommonFiles;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.Toast;

import com.chaos.view.PinView;
import com.example.raspi_temphum.CommonFiles.HelperClasses.UserHelperClass;
import com.example.raspi_temphum.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.TaskExecutors;
import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthOptions;
import com.google.firebase.auth.PhoneAuthProvider;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.concurrent.TimeUnit;

public class CodeVertifyOTP extends AppCompatActivity {

    String key_fullname, key_username, key_emailAddress, key_password, key_gender, key_selectedCountryCode, key_phoneNo, completePhoneNumber;
    String purpose;     // to change the password in the same activity
    PinView pinView;
    Button verifyBtn;
    String codeGeneratedBySystem;
    Intent LoginSuccessfulActivity, forgetPasswordNewCredentials;

    FirebaseAuth firebaseAuth = FirebaseAuth.getInstance();

    FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();
    DatabaseReference databaseReference = firebaseDatabase.getReference("Users");

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
        setContentView(R.layout.activity_code_vertify_o_t_p);

        pinView = findViewById(R.id.pinView);
        verifyBtn = findViewById(R.id.verifyBtn);
        LoginSuccessfulActivity = new Intent(this, LoginSuccessfull.class);
        forgetPasswordNewCredentials = new Intent(getApplicationContext(), ForgetPassword_NewCredentials.class);


        key_fullname = getIntent().getStringExtra("key_fullname");
        key_username = getIntent().getStringExtra("key_username");
        key_emailAddress = getIntent().getStringExtra("key_emailAddress");
        key_password = getIntent().getStringExtra("key_password");
        key_gender = getIntent().getStringExtra("key_gender");
        key_selectedCountryCode = getIntent().getStringExtra("key_selectedCountryCode");
        key_phoneNo = getIntent().getStringExtra("key_phoneNo");
        completePhoneNumber = "+" + key_selectedCountryCode + key_phoneNo;
        purpose = getIntent().getStringExtra("Purpose");

        SendCodeToUser(completePhoneNumber);

        verifyBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                String codeManuallyEnteredByUser = pinView.getEditableText().toString();

                if (codeManuallyEnteredByUser.isEmpty()) {
                    pinView.setError("Please enter the OTP. !");
                    pinView.requestFocus();
                } else if (codeManuallyEnteredByUser.length() < 6) {
                    pinView.setError("Invalid Code");
                    pinView.requestFocus();
                } else {
                    VerifyCode(codeManuallyEnteredByUser);
                }
            }
        });
    }

    // Send OTP to specific phone number
    private void SendCodeToUser(String phoneNumber) {

        PhoneAuthOptions options = PhoneAuthOptions.newBuilder(firebaseAuth)
                .setPhoneNumber(phoneNumber)    // Phone number to verify
                .setTimeout(60L, TimeUnit.SECONDS)   // Timeout duration and unit of timeout
                .setActivity(this)      // Activity (for callback binding)
                .setCallbacks(mCallbacks)   // OnVerificationStateChangedCallbacks
                .build();
        PhoneAuthProvider.verifyPhoneNumber(options);
    }

    private PhoneAuthProvider.OnVerificationStateChangedCallbacks mCallbacks = new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {

        @Override
        public void onCodeSent(@NonNull String s, @NonNull PhoneAuthProvider.ForceResendingToken forceResendingToken) {
            super.onCodeSent(s, forceResendingToken);
            Toast.makeText(CodeVertifyOTP.this, "Code Sent", Toast.LENGTH_SHORT).show();
            codeGeneratedBySystem = s;              // Code generated by system
        }

        // automatically invokes the code from the SMS
        @Override
        public void onVerificationCompleted(@NonNull PhoneAuthCredential phoneAuthCredential) {
            Toast.makeText(CodeVertifyOTP.this, "Verification completed", Toast.LENGTH_LONG).show();
            String codeByUser = phoneAuthCredential.getSmsCode();         //Gets the Code entered by the user in pinview

            if (codeByUser != null) {
                VerifyCode(codeByUser);
            }
        }

        // If mobile number format is not correct/ exceed SMS quota, this method will be called..
        @Override
        public void onVerificationFailed(@NonNull FirebaseException e) {
            Toast.makeText(CodeVertifyOTP.this, "Verification failed " + e.getMessage(), Toast.LENGTH_LONG).show();
        }
    };

    private void VerifyCode(String codeByUser) {
        Toast.makeText(this, "Verify Code", Toast.LENGTH_SHORT).show();
        PhoneAuthCredential credential = PhoneAuthProvider.getCredential(codeGeneratedBySystem, codeByUser);
        SignInUserByCredentials(credential);
    }

    private void SignInUserByCredentials(PhoneAuthCredential credential) {

        firebaseAuth.signInWithCredential(credential).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if (task.isComplete()) {

                    if (purpose == null) {
                        Toast.makeText(CodeVertifyOTP.this, "New data Crash", Toast.LENGTH_SHORT).show();
                        SaveNewUserData();
                        LoginSuccessfulActivity.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                        startActivity(LoginSuccessfulActivity);
                    } else if (purpose.equals("UpdatePassword")) {
                        Toast.makeText(CodeVertifyOTP.this, "Update Password", Toast.LENGTH_SHORT).show();
                        UpdatePasswordScreen();
                    }
                } else {
                    Toast.makeText(CodeVertifyOTP.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    private void UpdatePasswordScreen() {
        forgetPasswordNewCredentials.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        forgetPasswordNewCredentials.putExtra("requestTochangePassword", completePhoneNumber);
        startActivity(forgetPasswordNewCredentials);
    }

    private void SaveNewUserData() {
        UserHelperClass userHelperClass = new UserHelperClass(key_fullname, key_username, key_emailAddress, key_password, key_gender, key_phoneNo);
        databaseReference.child(completePhoneNumber).setValue(userHelperClass);
    }
}